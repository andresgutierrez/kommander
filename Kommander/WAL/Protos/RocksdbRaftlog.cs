// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rocksdb_raftlog.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kommander.WAL.Protos {

  /// <summary>Holder for reflection information generated from rocksdb_raftlog.proto</summary>
  public static partial class RocksdbRaftlogReflection {

    #region Descriptor
    /// <summary>File descriptor for rocksdb_raftlog.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RocksdbRaftlogReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVyb2Nrc2RiX3JhZnRsb2cucHJvdG8SFEtvbW1hbmRlci5XQUwuUHJvdG9z",
            "IpQBCg5SYWZ0TG9nTWVzc2FnZRIRCglwYXJ0aXRpb24YASABKAUSCgoCaWQY",
            "AiABKAMSDAoEdGVybRgDIAEoAxIMCgR0eXBlGAQgASgFEg8KB2xvZ1R5cGUY",
            "BSABKAkSCwoDbG9nGAYgASgMEhQKDHRpbWVQaHlzaWNhbBgHIAEoAxITCgt0",
            "aW1lQ291bnRlchgIIAEoDWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kommander.WAL.Protos.RaftLogMessage), global::Kommander.WAL.Protos.RaftLogMessage.Parser, new[]{ "Partition", "Id", "Term", "Type", "LogType", "Log", "TimePhysical", "TimeCounter" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RaftLogMessage : pb::IMessage<RaftLogMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaftLogMessage> _parser = new pb::MessageParser<RaftLogMessage>(() => new RaftLogMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RaftLogMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kommander.WAL.Protos.RocksdbRaftlogReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaftLogMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaftLogMessage(RaftLogMessage other) : this() {
      partition_ = other.partition_;
      id_ = other.id_;
      term_ = other.term_;
      type_ = other.type_;
      logType_ = other.logType_;
      log_ = other.log_;
      timePhysical_ = other.timePhysical_;
      timeCounter_ = other.timeCounter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaftLogMessage Clone() {
      return new RaftLogMessage(this);
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 1;
    private int partition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "term" field.</summary>
    public const int TermFieldNumber = 3;
    private long term_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Term {
      get { return term_; }
      set {
        term_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "logType" field.</summary>
    public const int LogTypeFieldNumber = 5;
    private string logType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogType {
      get { return logType_; }
      set {
        logType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log" field.</summary>
    public const int LogFieldNumber = 6;
    private pb::ByteString log_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Log {
      get { return log_; }
      set {
        log_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timePhysical" field.</summary>
    public const int TimePhysicalFieldNumber = 7;
    private long timePhysical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimePhysical {
      get { return timePhysical_; }
      set {
        timePhysical_ = value;
      }
    }

    /// <summary>Field number for the "timeCounter" field.</summary>
    public const int TimeCounterFieldNumber = 8;
    private uint timeCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeCounter {
      get { return timeCounter_; }
      set {
        timeCounter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RaftLogMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RaftLogMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Partition != other.Partition) return false;
      if (Id != other.Id) return false;
      if (Term != other.Term) return false;
      if (Type != other.Type) return false;
      if (LogType != other.LogType) return false;
      if (Log != other.Log) return false;
      if (TimePhysical != other.TimePhysical) return false;
      if (TimeCounter != other.TimeCounter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Partition != 0) hash ^= Partition.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Term != 0L) hash ^= Term.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (LogType.Length != 0) hash ^= LogType.GetHashCode();
      if (Log.Length != 0) hash ^= Log.GetHashCode();
      if (TimePhysical != 0L) hash ^= TimePhysical.GetHashCode();
      if (TimeCounter != 0) hash ^= TimeCounter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Partition != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Partition);
      }
      if (Id != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Id);
      }
      if (Term != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Term);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (LogType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LogType);
      }
      if (Log.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Log);
      }
      if (TimePhysical != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TimePhysical);
      }
      if (TimeCounter != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TimeCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Partition != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Partition);
      }
      if (Id != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Id);
      }
      if (Term != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Term);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (LogType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LogType);
      }
      if (Log.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Log);
      }
      if (TimePhysical != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TimePhysical);
      }
      if (TimeCounter != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TimeCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Partition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Partition);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Term != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Term);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (LogType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogType);
      }
      if (Log.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Log);
      }
      if (TimePhysical != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimePhysical);
      }
      if (TimeCounter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCounter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RaftLogMessage other) {
      if (other == null) {
        return;
      }
      if (other.Partition != 0) {
        Partition = other.Partition;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Term != 0L) {
        Term = other.Term;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.LogType.Length != 0) {
        LogType = other.LogType;
      }
      if (other.Log.Length != 0) {
        Log = other.Log;
      }
      if (other.TimePhysical != 0L) {
        TimePhysical = other.TimePhysical;
      }
      if (other.TimeCounter != 0) {
        TimeCounter = other.TimeCounter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Partition = input.ReadInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt64();
            break;
          }
          case 24: {
            Term = input.ReadInt64();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            LogType = input.ReadString();
            break;
          }
          case 50: {
            Log = input.ReadBytes();
            break;
          }
          case 56: {
            TimePhysical = input.ReadInt64();
            break;
          }
          case 64: {
            TimeCounter = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Partition = input.ReadInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt64();
            break;
          }
          case 24: {
            Term = input.ReadInt64();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            LogType = input.ReadString();
            break;
          }
          case 50: {
            Log = input.ReadBytes();
            break;
          }
          case 56: {
            TimePhysical = input.ReadInt64();
            break;
          }
          case 64: {
            TimeCounter = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
