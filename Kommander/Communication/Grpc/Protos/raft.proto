
syntax = "proto3";

service Rafter {
  rpc Vote (GrpcVoteRequest) returns (GrpcVoteResponse);
  rpc RequestVotes (GrpcRequestVotesRequest) returns (GrpcRequestVotesResponse);
  rpc AppendLogs (GrpcAppendLogsRequest) returns (GrpcAppendLogsResponse);
}

message GrpcVoteRequest {
  int32 Partition = 1;
  int64 Term = 2;
  int64 TimePhysical = 3;
  uint32 TimeCounter = 4;
  string Endpoint = 5;
}

message GrpcVoteResponse {

}

message GrpcRequestVotesRequest {
  int32 Partition = 1;
  int64 Term = 2;
  int64 MaxLogId = 3;
  int64 TimePhysical = 4;
  uint32 TimeCounter = 5;
  string Endpoint = 6;
}

message GrpcRequestVotesResponse {
  
}

message GrpcAppendLogsRequest {
  int32 Partition = 1;
  int64 Term = 2;
  int64 TimePhysical = 3;
  uint32 TimeCounter = 4;
  string Endpoint = 5;
  repeated GrpcRaftLog Logs = 6;
}

message GrpcAppendLogsResponse {
  GrpcRaftOperationStatus Status = 1;
  int64 CommitedIndex = 2;
}

message GrpcRaftLog {
  int64 Id = 1;
  GrpcRaftLogType Type = 2;
  int64 Term = 3;
  int64 TimePhysical = 4;
  uint32 TimeCounter = 5;
  string LogType = 6;
  bytes Data = 7;  
}

enum GrpcRaftLogType {
  PROPOSED = 0;
  COMMITED = 1;
  PROPOSED_CHECKPOINT = 2;
  COMMITED_CHECKPOINT = 3;
}

enum GrpcRaftOperationStatus {
  SUCCESS = 0;
  ERRORED = 1;
  NODE_IS_NOT_LEADER = 2;
  LEADER_IN_OLD_TERM = 3;
  LEADER_IN_OUTDATED_TERM = 4;   
}
