
syntax = "proto3";

service Rafter {
    rpc Handshake (GrpcHandshakeRequest) returns (GrpcHandshakeResponse);
    rpc Vote (GrpcVoteRequest) returns (GrpcVoteResponse);
    rpc RequestVotes (GrpcRequestVotesRequest) returns (GrpcRequestVotesResponse);
    rpc AppendLogs (GrpcAppendLogsRequest) returns (GrpcAppendLogsResponse);
    rpc AppendLogsBatch (GrpcAppendLogsBatchRequest) returns (GrpcAppendLogsBatchResponse);
    rpc CompleteAppendLogs (GrpcCompleteAppendLogsRequest) returns (GrpcCompleteAppendLogsResponse);
    rpc CompleteAppendLogsBatch (GrpcCompleteAppendLogsBatchRequest) returns (GrpcCompleteAppendLogsBatchResponse);
    rpc BatchRequests (GrpcBatchRequestsRequest) returns (GrpcBatchRequestsResponse);
}

message GrpcBatchRequestsRequest
{
    repeated GrpcBatchRequestsRequestItem Requests = 1;
}

message GrpcBatchRequestsRequestItem
{
    GrpcBatchRequestsRequestType Type = 1;
    optional GrpcHandshakeRequest Handshake = 2;
    optional GrpcVoteRequest Vote = 3;
    optional GrpcRequestVotesRequest RequestVotes = 4;
    optional GrpcAppendLogsRequest AppendLogs = 5;
    optional GrpcCompleteAppendLogsRequest CompleteAppendLogs = 6;
}

message GrpcBatchRequestsResponse
{
    
}

message GrpcHandshakeRequest {
    int32 Partition = 1;
    int64 MaxLogId = 2;
    string Endpoint = 3;
}

message GrpcHandshakeResponse {

}

message GrpcVoteRequest {
    int32 Partition = 1;
    int64 Term = 2;
    int64 MaxLogId = 3;
    int64 TimePhysical = 4;
    uint32 TimeCounter = 5;
    string Endpoint = 6;
}

message GrpcVoteResponse {

}

message GrpcRequestVotesRequest {
    int32 Partition = 1;
    int64 Term = 2;
    int64 MaxLogId = 3;
    int64 TimePhysical = 4;
    uint32 TimeCounter = 5;
    string Endpoint = 6;
}

message GrpcRequestVotesResponse {
  
}

message GrpcAppendLogsRequest {
  int32 Partition = 1;
  int64 Term = 2;
  int64 TimePhysical = 3;
  uint32 TimeCounter = 4;
  string Endpoint = 5;
  repeated GrpcRaftLog Logs = 6;
}

message GrpcAppendLogsResponse {

}

message GrpcAppendLogsBatchRequest {
  repeated GrpcAppendLogsRequest AppendLogs = 1; 
}

message GrpcAppendLogsBatchResponse {

}

message GrpcCompleteAppendLogsRequest {
  int32 Partition = 1;
  int64 Term = 2;
  int64 TimePhysical = 3;
  uint32 TimeCounter = 4;
  string Endpoint = 5;
  GrpcRaftOperationStatus Status = 6;
  int64 CommitIndex = 7;
}

message GrpcCompleteAppendLogsResponse {

}

message GrpcCompleteAppendLogsBatchRequest {
  repeated GrpcCompleteAppendLogsRequest CompleteLogs = 1;
}

message GrpcCompleteAppendLogsBatchResponse {

}

message GrpcRaftLog {
  int64 Id = 1;
  GrpcRaftLogType Type = 2;
  int64 Term = 3;
  int64 TimePhysical = 4;
  uint32 TimeCounter = 5;
  string LogType = 6;
  bytes Data = 7;  
}

enum GrpcBatchRequestsRequestType {
  HANDSHAKE = 0;
  VOTE = 1;
  REQUEST_VOTES = 2;
  APPEND_LOGS = 3;
  COMPLETE_APPEND_LOGS = 4;
}

enum GrpcRaftLogType {
  PROPOSED = 0;
  COMMITED = 1;
  PROPOSED_CHECKPOINT = 2;
  COMMITED_CHECKPOINT = 3;
}

enum GrpcRaftOperationStatus {
  SUCCESS = 0;
  ERRORED = 1;
  NODE_IS_NOT_LEADER = 2;
  LEADER_IN_OLD_TERM = 3;
  LEADER_ALREADY_ELECTED = 4;
  LOGS_FROM_ANOTHER_LEADER = 5;
  ACTIVE_PROPOSAL = 6;
  PROPOSAL_NOT_FOUND = 7;
  PROPOSAL_TIMEOUT = 8;
  REPLICATION_FAILED = 9;
}
